name: Build and Deploy

on:
  push:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false

      - name: Create Conda Environment With MPI and Stable HNN version
        run: make create-textbook-stable-build

      - name: Test MPI
        run: |
          conda run -n textbook-stable-build \
          mpiexec -np 2 nrniv -mpi -python -c '
          from neuron import h;
          from mpi4py import MPI;
          print(f"Hello from proc {MPI.COMM_WORLD.Get_rank()}");
          h.quit()'

      - name: Modify .gitignore
        run: |
          # Remove the line that ignores HTML files in the content directory
          grep -v '^content/\*\*/\*.html$' .gitignore > .gitignore.tmp && mv .gitignore.tmp .gitignore
          cat .gitignore

      - name: Determine Build Method
        run: |
          if conda run -n textbook-stable-build python scripts/check_nb_versions.py; then
            echo "BUILD_FLAG=--execution-filter execute-updated-unskipped-notebooks" >> $GITHUB_ENV
          else
            echo "BUILD_FLAG=--execution-filter execute-updated-unskipped-notebooks" >> $GITHUB_ENV
            echo "Not all notebooks were executed on the latest version. Forcing re-execution."
          fi

      - name: Build Website
        run: conda run -n textbook-stable-build env PYTHONUNBUFFERED=1 python build.py $BUILD_FLAG

      - name: Deploy to GitHub Pages
        if: github.repository == 'jonescompneurolab/textbook' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .

      - name: Deploy to GitHub Pages (Fork)
        if: github.repository != 'jonescompneurolab/textbook'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
